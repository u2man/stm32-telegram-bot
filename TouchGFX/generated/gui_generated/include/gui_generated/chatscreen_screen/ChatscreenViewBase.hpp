/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CHATSCREENVIEWBASE_HPP
#define CHATSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/chatscreen_screen/ChatscreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/MessageContainer.hpp>
#include <gui/containers/SelectedMessageContainer.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/containers/Container.hpp>

class ChatscreenViewBase : public touchgfx::View<ChatscreenPresenter>
{
public:
    ChatscreenViewBase();
    virtual ~ChatscreenViewBase() {}
    virtual void setupScreen();

    virtual void MessagescrollListUpdateItem(MessageContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Chatscreen
    }

    virtual void MessagescrollListUpdateCenterItem(SelectedMessageContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Chatscreen
    }

    /*
     * Virtual Action Handlers
     */
    virtual void SendMessage_Execute()
    {
        // Override and implement this function in Chatscreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Box box2;
    touchgfx::TextArea textArea1;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  EditTextflexButton;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  SendMsgflexButton;
    touchgfx::Box box2_1;
    touchgfx::TextAreaWithOneWildcard StatustextArea1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  AutomationflexButton;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::TextAreaWithOneWildcard TelegramStatustextArea;
    touchgfx::ScrollWheelWithSelectionStyle MessagescrollList;
    touchgfx::DrawableListItems<MessageContainer, 7> MessagescrollListListItems;
    touchgfx::DrawableListItems<SelectedMessageContainer, 2> MessagescrollListSelectedListItems;
    touchgfx::ModalWindow KeyboardmodalWindow;
    touchgfx::Container Keyboardcontainer;

    /*
     * Wildcard Buffers
     */
    static const uint16_t STATUSTEXTAREA1_SIZE = 100;
    touchgfx::Unicode::UnicodeChar StatustextArea1Buffer[STATUSTEXTAREA1_SIZE];
    static const uint16_t TELEGRAMSTATUSTEXTAREA_SIZE = 100;
    touchgfx::Unicode::UnicodeChar TelegramStatustextAreaBuffer[TELEGRAMSTATUSTEXTAREA_SIZE];
    static const uint16_t EDITTEXTFLEXBUTTON_SIZE = 50;
    touchgfx::Unicode::UnicodeChar EditTextflexButtonBuffer[EDITTEXTFLEXBUTTON_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ChatscreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<ChatscreenViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // CHATSCREENVIEWBASE_HPP
