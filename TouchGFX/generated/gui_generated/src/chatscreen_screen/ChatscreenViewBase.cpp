/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/chatscreen_screen/ChatscreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ChatscreenViewBase::ChatscreenViewBase() :
    flexButtonCallback(this, &ChatscreenViewBase::flexButtonCallbackHandler),
    updateItemCallback(this, &ChatscreenViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_TELEGRAMBG_ID));

    box2.setPosition(0, 0, 480, 31);
    box2.setColor(touchgfx::Color::getColorFromRGB(65, 159, 217));

    textArea1.setXY(9, 6);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHK2));

    EditTextflexButton.setBoxWithBorderPosition(0, 0, 273, 25);
    EditTextflexButton.setBorderSize(1);
    EditTextflexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(0, 0, 0));
    EditTextflexButton.setWildcardText(TypedText(T___SINGLEUSE_2TP6));
    Unicode::snprintf(EditTextflexButtonBuffer, EDITTEXTFLEXBUTTON_SIZE, "%s", TypedText(T___SINGLEUSE_XPUN).getText());
    EditTextflexButton.setWildcardTextBuffer(EditTextflexButtonBuffer);
    EditTextflexButton.setWildcardTextPosition(6, 3, 273, 25);
    EditTextflexButton.setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    EditTextflexButton.setPosition(3, 212, 273, 25);
    EditTextflexButton.setAction(flexButtonCallback);

    SendMsgflexButton.setBoxWithBorderPosition(0, 0, 50, 28);
    SendMsgflexButton.setBorderSize(1);
    SendMsgflexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    SendMsgflexButton.setText(TypedText(T___SINGLEUSE_XOOW));
    SendMsgflexButton.setTextPosition(0, 4, 50, 28);
    SendMsgflexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(139, 139, 139));
    SendMsgflexButton.setPosition(280, 210, 50, 28);
    SendMsgflexButton.setAction(flexButtonCallback);

    box2_1.setPosition(0, 241, 480, 31);
    box2_1.setColor(touchgfx::Color::getColorFromRGB(65, 159, 217));

    StatustextArea1.setXY(3, 247);
    StatustextArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    StatustextArea1.setLinespacing(0);
    Unicode::snprintf(StatustextArea1Buffer, STATUSTEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SMZG).getText());
    StatustextArea1.setWildcard(StatustextArea1Buffer);
    StatustextArea1.resizeToCurrentText();
    StatustextArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WCXT));

    AutomationflexButton.setBoxWithBorderPosition(0, 0, 135, 28);
    AutomationflexButton.setBorderSize(1);
    AutomationflexButton.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    AutomationflexButton.setText(TypedText(T___SINGLEUSE_UQ7F));
    AutomationflexButton.setTextPosition(0, 4, 135, 28);
    AutomationflexButton.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(139, 139, 139));
    AutomationflexButton.setPosition(339, 210, 135, 28);
    AutomationflexButton.setAction(flexButtonCallback);

    textArea1_1_1.setXY(386, 7);
    textArea1_1_1.setColor(touchgfx::Color::getColorFromRGB(207, 202, 202));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z1I7));

    TelegramStatustextArea.setXY(311, 247);
    TelegramStatustextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    TelegramStatustextArea.setLinespacing(0);
    Unicode::snprintf(TelegramStatustextAreaBuffer, TELEGRAMSTATUSTEXTAREA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QETQ).getText());
    TelegramStatustextArea.setWildcard(TelegramStatustextAreaBuffer);
    TelegramStatustextArea.resizeToCurrentText();
    TelegramStatustextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBY7));

    MessagescrollList.setPosition(4, 34, 463, 176);
    MessagescrollList.setHorizontal(false);
    MessagescrollList.setCircular(false);
    MessagescrollList.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    MessagescrollList.setSwipeAcceleration(10);
    MessagescrollList.setDragAcceleration(10);
    MessagescrollList.setNumberOfItems(10);
    MessagescrollList.setSelectedItemOffset(150);
    MessagescrollList.setSelectedItemExtraSize(0, 0);
    MessagescrollList.setSelectedItemMargin(0, 0);
    MessagescrollList.setDrawableSize(30, 0);
    MessagescrollList.setDrawables(MessagescrollListListItems, updateItemCallback,
                              MessagescrollListSelectedListItems, updateItemCallback);
    MessagescrollList.animateToItem(0, 0);

    KeyboardmodalWindow.setBackground(touchgfx::BitmapId(BITMAP_BG480X272_ID), 0, 0);
    KeyboardmodalWindow.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    KeyboardmodalWindow.setShadeAlpha(150);
    KeyboardmodalWindow.hide();

    Keyboardcontainer.setPosition(80, 16, 320, 240);
    KeyboardmodalWindow.add(Keyboardcontainer);

    add(__background);
    add(image1);
    add(box2);
    add(textArea1);
    add(EditTextflexButton);
    add(SendMsgflexButton);
    add(box2_1);
    add(StatustextArea1);
    add(AutomationflexButton);
    add(textArea1_1_1);
    add(TelegramStatustextArea);
    add(MessagescrollList);
    add(KeyboardmodalWindow);
}

void ChatscreenViewBase::setupScreen()
{
    MessagescrollList.initialize();
    for (int i = 0; i < MessagescrollListListItems.getNumberOfDrawables(); i++)
    {
        MessagescrollListListItems[i].initialize();
    }
    for (int i = 0; i < MessagescrollListSelectedListItems.getNumberOfDrawables(); i++)
    {
        MessagescrollListSelectedListItems[i].initialize();
    }
}

void ChatscreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &EditTextflexButton)
    {
        //Interaction3
        //When EditTextflexButton clicked show KeyboardmodalWindow
        //Show KeyboardmodalWindow
        KeyboardmodalWindow.setVisible(true);
        KeyboardmodalWindow.invalidate();
    }
    else if (&src == &SendMsgflexButton)
    {
        //Interaction2
        //When SendMsgflexButton clicked call virtual function
        //Call SendMessage_Execute
        SendMessage_Execute();
    }
    else if (&src == &AutomationflexButton)
    {
        //Interaction1
        //When AutomationflexButton clicked change screen to AutomationScreen
        //Go to AutomationScreen with screen transition towards East
        application().gotoAutomationScreenScreenSlideTransitionEast();
    }
}

void ChatscreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &MessagescrollListListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        MessageContainer* cc = (MessageContainer*)d;
        MessagescrollListUpdateItem(*cc, itemIndex);
    }
    else if (items == &MessagescrollListSelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        SelectedMessageContainer* cc = (SelectedMessageContainer*)d;
        MessagescrollListUpdateCenterItem(*cc, itemIndex);
    }
}
